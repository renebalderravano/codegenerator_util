create database [DataBaseName];

CREATE TABLE [DataBaseName].AUTHORITY (
   ID  BIGint NOT NULL,
   NAME VARCHAR(255),
   PRIMARY KEY (ID)
);

/**ALTER TABLE IF EXISTS [DataBaseName].AUTHORITY ADD CONSTRAINT AUTHORITY_NAME UNIQUE (NAME);**/
CREATE TABLE [DataBaseName].USER (
   ID  bigint NOT NULL auto_increment,
   ACCOUNT_EXPIRED BOOLEAN,
   ACCOUNT_LOCKED BOOLEAN,
   CREDENTIALS_EXPIRED BOOLEAN,
   ENABLED BOOLEAN,
   PASSWORD VARCHAR(255),
   USER_NAME VARCHAR(255),
   PRIMARY KEY (ID)
);

/**ALTER TABLE IF EXISTS USER_ ADD CONSTRAINT USER_USER_NAME UNIQUE (USER_NAME);**/
CREATE TABLE [DataBaseName].USERS_AUTHORITIES (
   USER_ID INT8 NOT NULL,
   AUTHORITY_ID INT8 NOT NULL,
   PRIMARY KEY (USER_ID, AUTHORITY_ID)
);  

ALTER TABLE  [DataBaseName].USERS_AUTHORITIES ADD CONSTRAINT FK_USERS_AUTHORITIES_AUTHORITY
FOREIGN KEY (AUTHORITY_ID) REFERENCES [DataBaseName].AUTHORITY(ID);     
ALTER TABLE  [DataBaseName].USERS_AUTHORITIES ADD CONSTRAINT FK_USERS_AUTHORITIES_USER
FOREIGN KEY (USER_ID) REFERENCES [DataBaseName].user(ID);

INSERT INTO [DataBaseName].AUTHORITY(ID, NAME) VALUES (1, 'ADMIN');

CREATE TABLE [DataBaseName].OAUTH_CLIENT_DETAILS (
  CLIENT_ID VARCHAR(255) PRIMARY KEY,
  RESOURCE_IDS VARCHAR(255),
  CLIENT_SECRET VARCHAR(255),
  SCOPE VARCHAR(255),
  AUTHORIZED_GRANT_TYPES VARCHAR(255),
  WEB_SERVER_REDIRECT_URI VARCHAR(255),
  AUTHORITIES VARCHAR(255),
  ACCESS_TOKEN_VALIDITY INTEGER,
  REFRESH_TOKEN_VALIDITY INTEGER,
  ADDITIONAL_INFORMATION VARCHAR(4096),
  AUTOAPPROVE VARCHAR(255)
);

CREATE TABLE [DataBaseName].OAUTH_CLIENT_TOKEN (
  TOKEN_ID VARCHAR(255),
  TOKEN blob,
  AUTHENTICATION_ID VARCHAR(255) PRIMARY KEY,
  USER_NAME VARCHAR(255),
  CLIENT_ID VARCHAR(255)
);

CREATE TABLE [DataBaseName].OAUTH_ACCESS_TOKEN (
  TOKEN_ID VARCHAR(255),
  TOKEN blob,
  AUTHENTICATION_ID VARCHAR(255) PRIMARY KEY,
  USER_NAME VARCHAR(255),
  CLIENT_ID VARCHAR(255),
  AUTHENTICATION blob,
  REFRESH_TOKEN VARCHAR(255)
);

CREATE TABLE [DataBaseName].OAUTH_REFRESH_TOKEN (
  TOKEN_ID VARCHAR(255),
  TOKEN blob,
  AUTHENTICATION blob
);

CREATE TABLE [DataBaseName].OAUTH_CODE (
  CODE VARCHAR(255),
  AUTHENTICATION blob
);

CREATE TABLE [DataBaseName].OAUTH_APPROVALS (
  USERID VARCHAR(255),
  CLIENTID VARCHAR(255),
  SCOPE VARCHAR(255),
  STATUS VARCHAR(10),
  EXPIRESAT TIMESTAMP,
  LASTMODIFIEDAT TIMESTAMP
);

INSERT INTO [DataBaseName].USER(ID, USER_NAME, PASSWORD, ACCOUNT_EXPIRED, ACCOUNT_LOCKED, CREDENTIALS_EXPIRED, ENABLED)
  VALUES (1, 'admin', /*admin1234*/'$2a$08$qvrzQZ7jJ7oy2p/msL4M0.l83Cd0jNsX6AJUitbgRXGzge4j035ha', FALSE, FALSE, FALSE, TRUE);
INSERT INTO [DataBaseName].USER(ID, USER_NAME, PASSWORD, ACCOUNT_EXPIRED, ACCOUNT_LOCKED, CREDENTIALS_EXPIRED, ENABLED)
  VALUES (2, 'reader', /*reader1234*/'$2a$08$dwYz8O.qtUXboGosJFsS4u19LHKW7aCQ0LXXuNlRfjjGKwj5NfKSe', FALSE, FALSE, FALSE, TRUE);
INSERT INTO [DataBaseName].USER(ID, USER_NAME, PASSWORD, ACCOUNT_EXPIRED, ACCOUNT_LOCKED, CREDENTIALS_EXPIRED, ENABLED)
  VALUES (3, 'modifier', /*modifier1234*/'$2a$08$kPjzxewXRGNRiIuL4FtQH.mhMn7ZAFBYKB3ROz.J24IX8vDAcThsG', FALSE, FALSE, FALSE, TRUE);
INSERT INTO [DataBaseName].USER(ID, USER_NAME, PASSWORD, ACCOUNT_EXPIRED, ACCOUNT_LOCKED, CREDENTIALS_EXPIRED, ENABLED)
  VALUES (4, 'reader2', /*reader1234*/'$2a$08$vVXqh6S8TqfHMs1SlNTu/.J25iUCrpGBpyGExA.9yI.IlDRadR6Ea', FALSE, FALSE, FALSE, TRUE);
  
INSERT INTO [DataBaseName].USERS_AUTHORITIES(USER_ID, AUTHORITY_ID) VALUES (1, 1);
INSERT INTO [DataBaseName].USERS_AUTHORITIES(USER_ID, AUTHORITY_ID) VALUES (2, 1);
INSERT INTO [DataBaseName].USERS_AUTHORITIES(USER_ID, AUTHORITY_ID) VALUES (3, 1);
INSERT INTO [DataBaseName].USERS_AUTHORITIES(USER_ID, AUTHORITY_ID) VALUES (4, 1);

INSERT INTO [DataBaseName].OAUTH_CLIENT_DETAILS(CLIENT_ID, RESOURCE_IDS, CLIENT_SECRET, SCOPE, AUTHORIZED_GRANT_TYPES, AUTHORITIES, ACCESS_TOKEN_VALIDITY, REFRESH_TOKEN_VALIDITY)
	VALUES ('spring-security-oauth2-read-client', 'resource-server-rest-api',
	/*spring-security-oauth2-read-client-password1234*/'$2a$04$WGq2P9egiOYoOFemBRfsiO9qTcyJtNRnPKNBl5tokP7IP.eZn93km',
	'read', 'password,authorizatioauth_client_detailson_code,refresh_token,implicit', 'USER', 10800, 2592000);
INSERT INTO [DataBaseName].OAUTH_CLIENT_DETAILS(CLIENT_ID, RESOURCE_IDS, CLIENT_SECRET, SCOPE, AUTHORIZED_GRANT_TYPES, AUTHORITIES, ACCESS_TOKEN_VALIDITY, REFRESH_TOKEN_VALIDITY)
	VALUES ('spring-security-oauth2-read-write-client', 'resource-server-rest-api',
	/*spring-security-oauth2-read-write-client-password1234*/'$2a$04$soeOR.QFmClXeFIrhJVLWOQxfHjsJLSpWrU1iGxcMGdu.a5hvfY4W',
	'read,write', 'password,authorization_code,refresh_token,implicit', 'USER', 10800, 2592000);


